# frozen_string_literal: true

module Admin
  class <%= file_name.capitalize %>Controller < AdminController
    include Searchable

    def index
      @pagy, @items = pagy(
        find_items,
        page: params[:page],
        items: params[:items]
      )
    end

    def show
      @item = find_item
      @item_presenter = <%= file_name.singularize.capitalize %>Presenter.new(item: @item)
    end

    def new
      @item = <%= file_name.singularize.capitalize %>.new
    end

    def edit
      @item = find_item
      @item_presenter = <%= file_name.singularize.capitalize %>Presenter.new(item: @item)
    end

    def create
      @item = <%= file_name.singularize.capitalize %>.new <%= file_name.singularize %>_params

      if @item.save
        flash[:success] = t('success.create', model: helpers.model_singular)

        redirect_to admin_<%= file_name %>_path, format: :html
      else
        flash[:error] = t('errors.create', model: helpers.model_singular)

        render :new, status: :unprocessable_entity
      end
    end

    def update
      @item = find_item
      @item_presenter = <%= file_name.singularize.capitalize %>Presenter.new(item: @item)

      if @item.update <%= file_name.singularize %>_params
        flash[:success] = t('success.update', model: helpers.model_singular)

        redirect_to admin_<%= file_name.singularize %>_path
      else
        @return_to = params[:return_to]
        flash[:error] = t('errors.update', model: helpers.model_singular)

        render :edit, status: :unprocessable_entity
      end
    end

    def destroy
      @item = find_item

      if @item.destroy
        flash[:success] = t('success.destroy', model: helpers.model_singular)
      else
        flash[:error] = t('errors.destroy')
      end

      redirect_back fallback_location: admin_<%= file_name %>_path, format: :html
    end

    private

    def find_items
      <%= file_name.singularize.capitalize %>.order updated_at: :desc
    end

    def find_item
      <%= file_name.singularize.capitalize %>.find params[:id]
    end

    def <%= file_name.singularize %>_params
      params.require(:<%= file_name.singularize %>).permit(
        :title,
        :content
      )
    end
  end
end
