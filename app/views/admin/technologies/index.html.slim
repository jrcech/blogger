ruby:
  breadcrumb :technologies, @parent, @parent_presenter

  def thead
    [
      {
        cells: [
          search_icon(t('tables.headings.title')),
          search_icon(t('tables.headings.shortcut')),
          t('tables.headings.homepage')
        ]
      }
    ]
  end

  def collection
    index_data(
      @technologies,
      :highlight_title,
      :highlight_shortcut,
      :homepage
    )
  end

- if @parent.present?
  = render Headers::HeaderComponent.new(header: header(@parent_presenter),
    main_header: true,
    item: @parent,
    header_buttons: action_buttons(@parent))

  nav class="nav nav-tabs nav-fill"
    = render Buttons::ButtonComponent.new(title: 'Overview',
      icon: 'magnifying-glass',
      path: admin_article_path(@parent),
      button_class: 'nav-link')
    = render Buttons::ButtonComponent.new(title: t('models.reviews.more'),
      icon: 'eye',
      path: admin_article_reviews_path(@parent),
      button_class: 'nav-link')
    = render Buttons::ButtonComponent.new(title: t('models.comments.more'),
      icon: 'comment',
      path: admin_article_comments_path(@parent),
      button_class: 'nav-link')
    = render Buttons::ButtonComponent.new(title: t('models.technologies.more'),
      icon: 'cubes',
      path: admin_article_technologies_path(@parent),
      button_class: 'nav-link active')

= render Headers::HeaderComponent.new(header: index_header(:technologies),
  main_header: @parent.present? ? false : true,
  search_query: @search_query,
  pagy: @pagy,
  action_buttons: [new_button(:technologies)],
  path_for_search: @parent.present? ? search_admin_article_technologies_path(article_id: @parent.id) : search_admin_technologies_path)

= render Tables::TableComponent.new(collection:, thead:)

= render Footers::FooterComponent.new(left_dropdown: per_page_button(@pagy),
  pagination: @pagy)
