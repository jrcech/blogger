/ frozen_string_literal: true

ruby:
  breadcrumb :reviews, @parent, @parent_presenter

  def thead
    [
      {
        cells: [
          t('tables.headings.id'),
          search_icon(t('tables.headings.title')),
          search_icon(t('tables.headings.content')),
          t('models.articles.one')
        ]
      }
    ]
  end

  def collection
    index_data(
      @reviews,
      :id,
      :highlight_title,
      :highlight_truncate_content,
      :article_title
    )
  end

- if @parent.present?
  = render Headers::HeaderComponent.new(header: header(@parent_presenter),
    main_header: true,
    item: @parent,
    header_buttons: action_buttons(@parent))

  nav class="nav nav-tabs nav-fill"
    = render Buttons::ButtonComponent.new(title: 'Overview',
      icon: 'magnifying-glass',
      path: admin_article_path(@parent),
      button_class: 'nav-link')
    = render Buttons::ButtonComponent.new(title: t('models.reviews.more'),
      icon: 'eye',
      path: admin_article_reviews_path(@parent),
      button_class: 'nav-link active')

= render Headers::HeaderComponent.new(header: index_header(:reviews),
  main_header: @parent.present? ? false : true,
  search_query: @search_query,
  pagy: @pagy,
  action_buttons: [new_button(:reviews)],
  path_for_search: path_for(:search))

= render Tables::TableComponent.new(collection:, thead:)

= render Footers::FooterComponent.new(left_dropdown: per_page_button(@pagy),
  pagination: @pagy)
