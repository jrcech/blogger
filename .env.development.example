# Most important configuration that sets environment.
#
# Use `development` when developing and testing an application.
# Works for both local (Unix) and Docker.
#
# Use `production` for finished and public applications or for staging
# environment. Works for both local (Unix) and Docker.
export RAILS_ENV=development
export NODE_ENV=development

# If `production` is used for staging set `RAILS_STAGING=true`.
# Othewise left blank.
export RAILS_STAGING=

# In production staging environment use `RAILS_SERVE_STATIC_FILES=true` to
# serve files from `public/` when Rails application is set to production.
# Otherwise left blank.
export RAILS_SERVE_STATIC_FILES=

# Sets which Docker Compose services to build and run.
#
# Use `web,postgres,assets,selenium-chrome` for Docker Compose development
# environment with Selenium Chrome driver for testing and assets services that
# watch changes in code and reloads them.
#
# Use `seleniarm-chromium` for Apple Silicon or `selenium-chrome` for other
# chips.
export COMPOSE_PROFILES=web,postgres,assets,selenium-chrome

# Will work as is for development but for production always generate a secure
# secret key with `./run rails secret`. Keep secret at all costs.
export SECRET_KEY_BASE=generate-secure-and-secret-key-base-with-rails-secret

# Always set `POSTGRES_USER` and `POSTGRES_PASSWORD` for a more bulletproof
# solution when using Docker Compose. Works both for local (Unix) and Docker.
#
# Use`POSTGRES_USER=postgres` for development or production staging. Consider
# to change it in production.
#
# `POSTGRES_PASSWORD` will work as is for development but for production always
# generate a secure password. Keep secret at all costs.
export POSTGRES_USER=postgres
export POSTGRES_PASSWORD=change-this-to-some-long-secure-password

# Use `RAILS_ADMIN_*` environment variables to set first admin user that will
# be created during database seed process. Works for development and
# production staging environments.
#
# Do not use them in production environment and always use Rails console to
# create first admin.
export RAILS_ADMIN_EMAIL=admin@example.com
export RAILS_ADMIN_PASSWORD='123456789'
export RAILS_ADMIN_FIRST_NAME='John'
export RAILS_ADMIN_LAST_NAME='Doe'

# In development mount to Docker everything with `DOCKER_WEB_VOLUME=.:/app`.
# This skips rebuild of Docker images when code changes.
#
# In production mount to Docker only public assets with
# `DOCKER_WEB_VOLUME=./public:/app/public`.
export DOCKER_WEB_VOLUME=.:/app

# ## Cloud related configurations
#
# These settings are used for deploying to production environment with
# Cloud Init to VPS.

export UNIX_USERNAME=jdoe

export GH_USERNAME=jdoe
export GH_REPO=repo-name

export DOTFILES_REPO_USER=jdoe
export DOTFILES_REPO=vps_dotfiles
